# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := debug_proto
### Generated for rule debug_proto_genproto:
$(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.cc: obj := $(abs_obj)

$(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.cc: builddir := $(abs_builddir)

$(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.cc: TOOLSET := $(TOOLSET)
$(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.cc: src/modules/audio_processing/main/source/debug.proto $(builddir)/protoc FORCE_DO_CMD
	$(call do_cmd,debug_proto_genproto_0)
$(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.h: $(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.cc
$(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.h: ;

all_deps += $(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.cc $(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.h
cmd_debug_proto_genproto_0 = export LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; cd src/modules; mkdir -p $(obj)/gen/protoc_out/webrtc/audio_processing; "$(builddir)/protoc" "--proto_path=audio_processing/main/source/" "audio_processing/main/source//$(notdir $<)" "--cpp_out=$(obj)/gen/protoc_out/webrtc/audio_processing"
quiet_cmd_debug_proto_genproto_0 = RULE debug_proto_genproto_0 $@

rule_debug_proto_genproto_outputs := $(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.cc \
	$(obj)/gen/protoc_out/webrtc/audio_processing/debug.pb.h

### Finished generating for rule: debug_proto_genproto

### Finished generating for all rules

DEFS_Debug := '-DNO_HEAPCHECKER' \
	'-DCHROMIUM_BUILD' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_P2P_APIS=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DUSE_SKIA=1' \
	'-DENABLE_REGISTER_PROTOCOL_HANDLER=1' \
	'-DWEBRTC_TARGET_PC' \
	'-DWEBRTC_LINUX' \
	'-DWEBRTC_THREAD_RR' \
	'-D__STDC_FORMAT_MACROS' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-DWTF_USE_DYNAMIC_ANNOTATIONS=1' \
	'-D_DEBUG'

# Flags passed to all source files.
CFLAGS_Debug := -Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-D_FILE_OFFSET_BITS=64 \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-fno-strict-aliasing \
	-O0 \
	-g

# Flags passed to only C files.
CFLAGS_C_Debug := 

# Flags passed to only C++ files.
CFLAGS_CC_Debug := -fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wsign-compare

INCS_Debug := -Isrc \
	-I.

DEFS_Release := '-DNO_HEAPCHECKER' \
	'-DCHROMIUM_BUILD' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_P2P_APIS=1' \
	'-DENABLE_CONFIGURATION_POLICY' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DUSE_SKIA=1' \
	'-DENABLE_REGISTER_PROTOCOL_HANDLER=1' \
	'-DWEBRTC_TARGET_PC' \
	'-DWEBRTC_LINUX' \
	'-DWEBRTC_THREAD_RR' \
	'-D__STDC_FORMAT_MACROS' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0'

# Flags passed to all source files.
CFLAGS_Release := -Werror \
	-pthread \
	-fno-exceptions \
	-Wall \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-D_FILE_OFFSET_BITS=64 \
	-fvisibility=hidden \
	-pipe \
	-fPIC \
	-fno-strict-aliasing \
	-O2 \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Release := 

# Flags passed to only C++ files.
CFLAGS_CC_Release := -fno-rtti \
	-fno-threadsafe-statics \
	-fvisibility-inlines-hidden \
	-Wsign-compare

INCS_Release := -Isrc \
	-I.

OBJS := 

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/protoc

# Make sure our actions/rules run before any of us.
$(OBJS): | $(rule_debug_proto_genproto_outputs)


### Rules for final target.
# Build our special outputs first.
$(obj).target/src/modules/debug_proto.stamp: | $(rule_debug_proto_genproto_outputs)

# Preserve order dependency of special output on deps.
$(rule_debug_proto_genproto_outputs): | $(builddir)/protoc

$(obj).target/src/modules/debug_proto.stamp: TOOLSET := $(TOOLSET)
$(obj).target/src/modules/debug_proto.stamp: $(builddir)/protoc FORCE_DO_CMD
	$(call do_cmd,touch)

all_deps += $(obj).target/src/modules/debug_proto.stamp
# Add target alias
.PHONY: debug_proto
debug_proto: $(obj).target/src/modules/debug_proto.stamp

# Add target alias to "all" target.
.PHONY: all
all: debug_proto

